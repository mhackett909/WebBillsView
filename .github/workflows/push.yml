### ðŸš€ Workflow A: Auto-deploy :latest to Dev on Push to Main (React Frontend Only)

name: Auto Deploy React to Dev

on:
  push:
    branches: [main]

jobs:
  deploy-dev:
    runs-on: ubuntu-latest

    env:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Build React App
        run: |
          npm ci
          npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Docker Login to ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
            docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build and Push Docker Image
        run: |
          IMAGE_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPO_FRONTEND }}:latest
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

      - name: Render ECS task definition
        run: |
          envsubst < task-def-template.json > task-def-frontend.json
     
      - name: Register New Task Definition and Deploy to ECS
        run: |
          NEW_REVISION=$(aws ecs register-task-definition \
            --cli-input-json file://task-def-frontend.json \
            --query 'taskDefinition.revision' --output text)
      
          aws ecs update-service \
            --cluster bills-dev-cluster \
            --service bills-ui-dev \
            --task-definition webbills-ui:$NEW_REVISION \
            --force-new-deployment

